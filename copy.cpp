#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
#define M 1000000007
#define mp make_pair
#define pb push_back
#define vll vector<ll>
#define pll vector< pair <ll,ll> >
#define F first
#define S second
#define PII pair <ll,ll>

map<string, pll > m; // mapping sections to coordinates
map<string, int > g;  //mapping sections to groups 
char a[31][31];

struct product {
    ll id;
    string g;
    ll x;
    ll y;
};
vector <product> prod;

void display()
{
    ll i,j;
    for (i=0;i<=30;i++)
    {
        for (j=0;j<=30;j++)
            cout<<a[i][j]<<" ";
        cout<<endl;
    }
}
void initMatrix()
{
    
    ll i,j;
    for (i=0;i<=30;i++)
    {
        for (j=0;j<=30;j++)
        {
            a[i][j]=' ';
        }
    }
    for (auto it1 = m.begin();it1!=m.end();it1++)
    {
        for (auto it2 = it1->second.begin();it2!=it1->second.end();it2++)
        {
            a[it2->first][it2->second] = 'X';
        }
    }
}

void initialiseMapCoordinates()
{
    m["S1"] = {{3,5},{3,6},{4,5},{4,6}};
    g["S1"] = 1; 

    m["B1"] = {{7,3},{7,4}}; m["B2"] = {{9,3},{9,4}};
    m["B3"] = {{9,6}}; m["B4"] = {{7,6}};
    g["B1"] = 2, g["B2"] = 2, g["B3"] = 2, g["B4"] = 2;

    m["P1"] = {{19,5}}; m["P2"] = {{17,5}}; m["P3"] = {{15,5}};
    m["P4"] = {{15,3}}; m["P5"] = {{17,3}}; m["P6"] = {{19,3}};
    g["P1"] = 3, g["P2"] = 3, g["P3"] = 3, g["P4"] = 3, g["P5"] = 3, g["P6"] = 3;

    m["P7"] = {{13,3},{13,4},{13,5}};
    m["P8"] = {{11,3},{11,4},{11,5}};
    g["P7"] = 4, g["P8"] = 4;
    

    m["F"] = {{23,3},{23,4}};
    g["F"] = 5;

    m["M1"] = {{3,9},{4,9}}; m["M2"] = {{3,11},{4,11}};
    g["M1"] = 6, g["M2"] = 6;

    m["M3"] = {{3,13},{4,13}}; m["M4"] = {{3,15},{4,15}};
    g["M3"] = 17, g["M4"] = 17;

    m["D1"] = {{3,19},{4,19}}; m["D2"] = {{3,21},{4,21}};
    g["D1"] = 7, g["D2"] = 7;

    m["R1"] = {{3,24},{3,25},{3,26}}; 
    m["R2"] = {{5,24},{5,25},{5,26}};
    m["R3"] = {{7,24},{7,25},{7,26}};
    g["R1"] = 8, g["R2"] = 8, g["R3"] = 8;

    m["C1"] = {{14,24}}; m["C2"] = {{12,24}}; m["C3"] = {{10,24}};
    m["C4"] = {{10,26}}; m["C5"] = {{12,26}}; m["C6"] = {{14,26}};
    g["C1"] = 9, g["C2"] = 9, g["C3"] = 9, g["C4"] = 9, g["C5"] = 9, g["C6"] = 9;

    m["A1"] = {{21,24},{21,25},{21,26}}; 
    m["A2"] = {{19,24},{19,25},{19,26}};
    m["A3"] = {{17,24},{17,25},{17,26}};
    g["A1"] = 10, g["A2"] = 10, g["A3"] = 10;

    m["BG1"] = {{7,9},{8,9},{9,9},{10,9},{11,9},{12,9}};
    m["G1"] = {{7,11},{8,11},{9,11},{10,11},{11,11},{12,11}};
    g["BG1"] = 11, g["G1"] = 11;

    m["G2"] = {{7,13},{8,13},{9,13},{10,13},{11,13},{12,13}};
    m["G3"] = {{7,15},{8,15},{9,15},{10,15},{11,15},{12,15}};
    g["G2"] = 12, g["G3"] = 12,  

    m["G4"] = {{7,17},{8,17},{9,17},{10,17},{11,17},{12,17}};
    m["G5"] = {{7,19},{8,19},{9,19},{10,19},{11,19},{12,19}};
    m["G6"] = {{7,21},{8,21},{9,21},{10,21},{11,21},{12,21}};
    g["G4"] = 13, g["G5"] = 13, g["G6"] = 13;


    m["PG1"] = {{15,9},{16,9},{17,9},{18,9},{19,9},{20,9}};
    m["G7"] = {{15,11},{16,11},{17,11},{18,11},{19,11},{20,11}};
    g["PG1"] = 14, g["G7"] = 14;

    m["G8"] = {{15,13},{16,13},{17,13},{18,13},{19,13},{20,13}};
    m["G9"] = {{15,15},{16,15},{17,15},{18,15},{19,15},{20,15}};
    g["G8"] = 15,g["G9"] = 15;

    m["F1"] = {{15,17},{16,17},{17,17},{18,17},{19,17},{20,17}};
    m["F2"] = {{15,19},{16,19},{17,19},{18,19},{19,19},{20,19}};
    m["FD1"] = {{15,21},{16,21},{17,21},{18,21},{19,21},{20,21}};
    g["F1"] = 16, g["F2"] = 16, g["FD1"] = 16;

    initMatrix();
    // display();
}

void initialiseProducts()
{
    prod = {{1,"M1",3,9},{2,"P5",17,3},{3,"P7",13,4},{4,"C2",12,24},{5,"F2",18,19}};
    for (ll i=0;i<prod.size();i++)  a[prod[i].x][prod[i].y] = 'O';
    // display();
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    initialiseMapCoordinates();
    initialiseProducts();
}